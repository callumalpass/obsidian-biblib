{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#what-is-biblib","title":"What is BibLib?","text":"<p>BibLib is an Obsidian plugin that provides reference management functionalities within the Obsidian environment. It operates by storing each reference, such as a paper or a book, as a standard Markdown note. The bibliographic metadata for each reference is embedded within the note's YAML frontmatter, structured according to the Citation Style Language (CSL) JSON format.</p> <p>This approach maintains the entire reference library as plain text files (Markdown and YAML) inside the Obsidian vault. This makes the data portable, version-controllable, and searchable through Obsidian's native features.</p>"},{"location":"#csl-json-in-frontmatter","title":"CSL-JSON in Frontmatter","text":"<p>The use of CSL-JSON for storing bibliographic data offers several functional advantages:</p> <ol> <li>Interoperability: CSL-JSON is an open standard for citation data, which allows for compatibility with various external tools. Bibliography files generated by BibLib can be used with citation processors like Pandoc/Citeproc to format citations and bibliographies.</li> <li>Data Durability: Storing the reference library in human-readable plain text files (Markdown and YAML) ensures that the data is accessible even without the plugin. It also allows for version control using systems like Git.</li> <li>Integrated Knowledge Base: By treating references as notes within Obsidian, the plugin allows users to link, tag, and search their references just like any other note. This facilitates the integration of source materials with research notes.</li> <li>Bibliography Generation: BibLib can generate a <code>bibliography.json</code> file from the CSL-JSON data in the literature notes. This file can be used with tools like Pandoc to automate the creation of formatted citations and reference lists.</li> </ol>"},{"location":"core-concepts/","title":"Core Concepts","text":"<p>This section explains the main components of BibLib.</p>"},{"location":"core-concepts/#literature-notes","title":"Literature Notes","text":"<p>A \"Literature Note\" is a standard Markdown (<code>.md</code>) file in your Obsidian vault that represents a single reference (e.g., a journal article, book, or report).</p> <ul> <li>Content: The body of the Markdown file can be used for notes, summaries, or analysis of the reference.</li> <li>Metadata: Bibliographic information (author, title, year, etc.) is stored in the YAML frontmatter of the file.</li> <li>Filename: The filename for a literature note is generated from a template defined in the settings. The default is <code>@{{citekey}}</code>.</li> </ul> <p>Since literature notes are regular Obsidian notes, they can be linked, tagged, and organized in folders like any other note.</p>"},{"location":"core-concepts/#csl-json-metadata","title":"CSL-JSON Metadata","text":"<p>BibLib uses the Citation Style Language JSON (CSL-JSON) standard to structure the bibliographic metadata in the YAML frontmatter. CSL-JSON is an open format for citation data.</p> <ul> <li>Structure: It defines standard field names for bibliographic data (e.g., <code>title</code>, <code>author</code>, <code>issued</code>, <code>DOI</code>).</li> <li>Data Types: Fields have specific data types. For instance, <code>author</code> is an array of objects, with each object containing <code>family</code> and <code>given</code> name properties.</li> </ul> <p>Using CSL-JSON ensures that the reference data is portable and can be used with other academic tools.</p> <p>YAML Display in Obsidian</p> <p>Obsidian's native Properties UI may not correctly display nested YAML structures like the <code>author</code> array in CSL-JSON. This is a display limitation and does not affect the validity of the data. The raw YAML can be viewed in Source Mode.</p>"},{"location":"core-concepts/#citekeys","title":"Citekeys","text":"<p>A citekey is a unique identifier for each literature note. It is used for:</p> <ul> <li>Filenames: As a variable in the filename template.</li> <li>Linking: To create links between notes (e.g., <code>[[@Smith2023]]</code>).</li> <li>Citations: In external tools like Pandoc (e.g., <code>[@Smith2023]</code>).</li> </ul> <p>Citekeys are automatically generated based on a template that can be customized in the settings.</p>"},{"location":"core-concepts/#attachments","title":"Attachments","text":"<p>BibLib can manage file attachments (such as PDFs) for your literature notes.</p> <ul> <li>Importing: You can import a file, and BibLib will copy it to a designated attachments folder in your vault.</li> <li>Linking: You can link to a file that already exists within your vault.</li> <li>Zotero Connector: The Zotero Connector integration can automatically import PDFs when available.</li> </ul> <p>The path to the attachment is stored in the frontmatter of the literature note.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide provides the basic steps to start using BibLib.</p>"},{"location":"getting-started/#installation","title":"Installation","text":"<ol> <li>Install the plugin through the Obsidian Community Plugins interface.</li> <li>Enable the plugin in the \"Community Plugins\" section of Obsidian's settings.</li> </ol>"},{"location":"getting-started/#initial-configuration","title":"Initial Configuration","text":"<p>After installation, a few settings can be configured to suit your workflow.</p> <ol> <li>Literature Note Tag: Set a specific tag for your literature notes (default: <code>literature_note</code>). This tag is used by the plugin to identify reference notes in your vault.</li> <li>File Paths:<ul> <li>Literature note location: Specify the folder where new literature notes will be saved.</li> <li>Attachment folder path: Designate a folder for storing imported attachments like PDFs.</li> </ul> </li> <li>Open note on create: Choose whether to automatically open a new literature note after it's created.</li> </ol>"},{"location":"getting-started/#creating-your-first-reference","title":"Creating Your First Reference","text":"<ol> <li>Open the command palette (<code>Ctrl/Cmd + P</code>).</li> <li>Run the command \"BibLib: Create Literature Note\".</li> <li>In the modal that appears, you can either manually fill in the bibliographic details or use the metadata lookup feature.<ul> <li>Metadata Lookup: Enter a DOI, ISBN, or URL in the \"Auto-lookup\" field and click \"Lookup\" to automatically populate the form.</li> </ul> </li> <li>Once the fields are filled, click \"Create Note\".</li> </ol> <p>This will create a new Markdown file in the location you specified, with the bibliographic data stored in the YAML frontmatter.</p>"},{"location":"settings/","title":"Settings","text":"<p>This page details the available settings for the BibLib plugin.</p>"},{"location":"settings/#general-settings","title":"General Settings","text":"<ul> <li>Literature note tag: The tag to identify literature notes (default: <code>literature_note</code>).</li> <li>Open note on create: If enabled, new literature notes are opened automatically.</li> </ul>"},{"location":"settings/#file-path-settings","title":"File Path Settings","text":"<ul> <li>Attachment folder path: The folder for imported attachments (default: <code>biblib</code>).</li> <li>Create subfolder for attachments: If enabled, a subfolder named after the citekey is created for each reference's attachments.</li> <li>Literature note location: The folder where new literature notes are saved (default: vault root).</li> <li>Filename template: A template for generating filenames for literature notes (default: <code>@{{citekey}}</code>). Forward slashes (<code>/</code>) can be used to create subfolders.</li> </ul>"},{"location":"settings/#zotero-connector-settings-desktop-only","title":"Zotero Connector Settings (Desktop Only)","text":"<ul> <li>Enable Zotero Connector: Toggles the local server for Zotero integration. The Zotero desktop app must be closed to enable this.</li> <li>Connector port: The network port for the server (default: <code>23119</code>).</li> <li>Temporary PDF folder: An optional system path for temporarily storing downloaded PDFs.</li> </ul>"},{"location":"settings/#bibliography-builder-settings","title":"Bibliography Builder Settings","text":"<ul> <li>Bibliography JSON path: The path for the generated CSL-JSON file (default: <code>biblib/bibliography.json</code>).</li> <li>Citekey list path: The path for the generated Markdown list of citekeys (default: <code>citekeylist.md</code>).</li> <li>BibTeX file path: The path for the exported BibTeX file (default: <code>biblib/bibliography.bib</code>).</li> </ul>"},{"location":"settings/#note-template-settings","title":"Note Template Settings","text":"<ul> <li>Header template: A template for the content that appears above the YAML frontmatter in new notes.</li> <li>Custom frontmatter fields: Define additional fields to include in the YAML frontmatter. Each field's value is generated from a template.</li> </ul>"},{"location":"settings/#citekey-generation-settings","title":"Citekey Generation Settings","text":"<ul> <li>Citekey template: The template for generating citekeys (default: <code>{{author|lowercase}}{{title|titleword}}{{year}}</code>).</li> <li>Use Zotero keys (if available): If enabled, uses the citekey from Zotero if one is provided.</li> <li>Minimum citekey length: A random numeric suffix is added if the generated citekey is shorter than this value (default: <code>6</code>).</li> </ul>"},{"location":"settings/#bulk-import-settings","title":"Bulk Import Settings","text":"<p>These are the default settings for the bulk import feature, which can be overridden in the import modal.</p> <ul> <li>Attachment handling: <code>Ignore attachments</code> or <code>Import attachments to vault</code>.</li> <li>Include annotations in note body: If enabled, content from the BibTeX <code>annote</code> field is added to the note body.</li> <li>Citekey preference: <code>Use imported citekeys</code> or <code>Generate new citekeys</code>.</li> <li>Conflict resolution: <code>Skip existing notes</code> or <code>Overwrite existing notes</code>.</li> </ul>"},{"location":"settings/#user-interface-settings","title":"User Interface Settings","text":"<ul> <li>Favorite Languages: A list of languages to show at the top of language selection dropdowns.</li> <li>Default Modal Fields: A list of fields to show by default in the \"Create Literature Note\" modal.</li> </ul>"},{"location":"settings/#edit-modal-settings","title":"Edit Modal Settings","text":"<ul> <li>Regenerate citekey by default: If enabled, the \"Regenerate citekey\" option is checked by default in the edit modal.</li> <li>Update templated frontmatter by default: If enabled, custom frontmatter fields are re-evaluated when saving edits.</li> <li>Regenerate note body by default: If enabled, the note body is replaced with the header template when saving edits.</li> <li>Rename file when citekey changes: If enabled, the note file is renamed if the citekey changes.</li> </ul>"},{"location":"templating/","title":"Templating","text":"<p>BibLib uses a template engine with Handlebars/Mustache-style syntax to customize citekeys, filenames, and the content of literature notes.</p>"},{"location":"templating/#template-syntax","title":"Template Syntax","text":"<ul> <li>Variables: <code>{{variableName}}</code> (e.g., <code>{{title}}</code>). Use dot notation for nested data: <code>{{issued.date-parts.0.0}}</code> for the year.</li> <li>Formatters: <code>{{variableName|formatterName}}</code> or <code>{{variableName|formatter:parameter}}</code> (e.g., <code>{{title|lowercase}}</code>).</li> <li>Conditionals: <code>{{#variableName}}...{{/variableName}}</code> (if variable exists) and <code>{{^variableName}}...{{/variableName}}</code> (if variable does not exist).</li> <li>Loops: <code>{{#arrayName}}...{{/arrayName}}</code>. Inside a loop, <code>{{.}}</code> refers to the current item.</li> </ul>"},{"location":"templating/#available-variables","title":"Available Variables","text":"<p>The following variables are available in the templates:</p> <ul> <li>CSL Fields: All fields from the CSL-JSON data (e.g., <code>{{title}}</code>, <code>{{DOI}}</code>, <code>{{URL}}</code>, <code>{{container-title}}</code>).</li> <li>Citekey: <code>{{citekey}}</code>.</li> <li>Date Parts: <code>{{year}}</code>, <code>{{month}}</code>, <code>{{day}}</code>.</li> <li>Contributors:<ul> <li><code>{{authors}}</code>: A formatted string of primary authors.</li> <li><code>{{authors_raw}}</code>: An array of raw author objects.</li> <li><code>{{authors_family}}</code>: An array of author last names.</li> <li><code>{{authors_given}}</code>: An array of author first names.</li> <li>Similar variables are available for other roles (e.g., <code>{{editors}}</code>, <code>{{translators}}</code>).</li> </ul> </li> <li>Attachments:<ul> <li><code>{{pdflink}}</code>: An array of vault paths to attachments.</li> <li><code>{{attachments}}</code>: An array of formatted Obsidian wikilinks to attachments.</li> </ul> </li> <li>Related Notes:<ul> <li><code>{{links}}</code>: An array of formatted Obsidian wikilinks to related notes.</li> <li><code>{{linkPaths}}</code>: An array of the raw file paths for related notes.</li> </ul> </li> <li>Current Date/Time: <code>{{currentDate}}</code> (YYYY-MM-DD) and <code>{{currentTime}}</code> (HH:MM:SS).</li> </ul>"},{"location":"templating/#formatters","title":"Formatters","text":"<p>A variety of formatters are available for text case, length, manipulation, numbers, dates, and more.</p> <ul> <li>Text Case: <code>|uppercase</code>, <code>|lowercase</code>, <code>|capitalize</code>, <code>|sentence</code>.</li> <li>Length: <code>|truncate:N</code>, <code>|ellipsis:N</code>.</li> <li>Manipulation: <code>|trim</code>, <code>|prefix:TEXT</code>, <code>|suffix:TEXT</code>, <code>|replace:find:replace</code>.</li> <li>Date: <code>|date:iso</code>, <code>|date:short</code>, <code>|date:long</code>, <code>|date:year</code>.</li> <li>Abbreviation: <code>|abbrN</code> (e.g., <code>|abbr3</code> for the first 3 letters).</li> <li>Special: <code>|titleword</code> (extracts the first significant word of a title), <code>|shorttitle</code> (first 3 significant words).</li> </ul>"},{"location":"templating/#examples","title":"Examples","text":"<p>Header Template: <code># {{title}} ({{year}})</code></p> <p>Custom Frontmatter Field (aliases): <code>[\"{{title|sentence}}\", \"{{citekey}}\"]</code></p> <p>Citekey Template: <code>{{authors_family.0|lowercase}}{{year}}</code></p> <p>Filename Template: <code>{{type}}/{{year}}/{{citekey}}</code> This will create a file structure like <code>article/2023/smith2023.md</code>.</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>This page provides solutions to common issues.</p> <p>Q: Why do I see \"Invalid YAML\" warnings in the Obsidian Properties panel?</p> <p>A: This is a display limitation in Obsidian's native metadata parser, which does not fully support the nested YAML structures used in the CSL-JSON format. The data is stored correctly and is usable by BibLib and external tools. To view the raw YAML, switch the note to Source Mode.</p> <p>Q: The Zotero Connector integration is not working.</p> <p>A: Check the following: 1.  The feature is only available on Obsidian Desktop. 2.  The \"Enable Zotero Connector\" setting must be on. 3.  The Zotero Desktop application must be completely closed. 4.  Ensure no other application is using the same port (default 23119). 5.  Check that your firewall is not blocking the connection.</p> <p>Q: My custom frontmatter template for an array is not creating a proper YAML list.</p> <p>A: To create a valid YAML list, the template must start with <code>[</code> and end with <code>]</code>, and items should be properly quoted and separated by commas.</p> <p>Q: Attachments are not being found during bulk import.</p> <p>A: 1.  If importing from Zotero, ensure you selected \"Export Files\" during the export process. 2.  The <code>.bib</code> file and the associated <code>files</code> folder must be located inside your Obsidian vault before starting the import. 3.  In the bulk import modal, set \"Attachment handling\" to <code>Import attachments to vault</code>.</p> <p>Q: The \"Edit Literature Note\" command is not available.</p> <p>A: This command is only available when a literature note is the active file. Ensure the note has the correct literature note tag in its frontmatter.</p> <p>Q: How do I edit complex CSL fields like authors?</p> <p>A: For complex fields, it is best to edit the YAML directly in Source Mode. The <code>author</code> field, for example, is an array of objects:</p> <pre><code>author:\n  - family: Smith\n    given: Alice\n  - family: Jones\n    given: Bob\n</code></pre>"},{"location":"usage-guide/","title":"Usage Guide","text":"<p>This guide provides instructions for using the main features of BibLib.</p>"},{"location":"usage-guide/#creating-a-literature-note","title":"Creating a Literature Note","text":"<ol> <li>Open the Command Palette (<code>Ctrl/Cmd + P</code>).</li> <li>Run the command \"BibLib: Create Literature Note\".</li> <li>In the modal, you can fill the fields manually or use the auto-fill options:<ul> <li>Identifier Lookup: Enter a DOI, ISBN, PubMed ID, arXiv ID, or URL and click Lookup.</li> <li>Paste BibTeX: Paste a BibTeX entry and click Parse BibTeX.</li> </ul> </li> <li>Select the reference Type (e.g., Journal Article, Book).</li> <li>Add contributors (authors, editors) and any other required fields.</li> <li>Optionally, add attachments or link to related notes.</li> <li>Review the generated Citekey and click \"Create Note\".</li> </ol>"},{"location":"usage-guide/#editing-a-literature-note","title":"Editing a Literature Note","text":"<ol> <li>Open the literature note you want to edit.</li> <li>Open the Command Palette and run \"BibLib: Edit Literature Note\".</li> <li>The edit modal will appear, pre-filled with the note's current data.</li> <li>Make your changes and click \"Save\".</li> <li>You can also choose to regenerate the citekey, update templated frontmatter, or regenerate the note body.</li> </ol>"},{"location":"usage-guide/#creating-a-book-chapter-note","title":"Creating a Book Chapter Note","text":"<ol> <li>Ensure a literature note for the parent book already exists.</li> <li>Run the command \"BibLib: Create book chapter entry\".</li> <li>In the modal, select the parent book from the dropdown.</li> <li>Fill in the chapter-specific details (title, pages, authors).</li> <li>Click \"Create Chapter Note\".</li> </ol> <p>If the book's note is currently open, you can run \"BibLib: Create chapter from current book\" to pre-select the book.</p>"},{"location":"usage-guide/#using-the-zotero-connector-desktop-only","title":"Using the Zotero Connector (Desktop Only)","text":"<ol> <li>In BibLib's settings, enable the \"Zotero Connector\".</li> <li>Close the Zotero desktop application, as it uses the same port.</li> <li>In your web browser, click the Zotero Connector button to save a reference.</li> <li>The \"Create Literature Note\" modal will open in Obsidian, pre-filled with the reference data.</li> <li>Review the information and click \"Create Note\".</li> </ol> <p>To disable the integration, toggle the setting off or run the command \"BibLib: Toggle Zotero Connector server\".</p>"},{"location":"usage-guide/#bulk-importing-references","title":"Bulk Importing References","text":"<ol> <li>Export references from your reference manager in BibTeX (<code>.bib</code>) or CSL-JSON (<code>.json</code>) format.<ul> <li>If exporting from Zotero with attachments, select \"Export Files\" and place both the <code>.bib</code> file and the <code>files</code> folder inside your Obsidian vault.</li> </ul> </li> <li>Run the command \"BibLib: Bulk import references\".</li> <li>In the modal, choose the file to import and configure the import options:<ul> <li>Attachment handling: Choose whether to ignore or import attachments.</li> <li>Citekey preference: Use the keys from the import file or generate new ones.</li> <li>Conflict resolution: Skip or overwrite existing notes with the same citekey.</li> </ul> </li> <li>Click \"Start Import\".</li> </ol>"},{"location":"usage-guide/#generating-bibliography-files","title":"Generating Bibliography Files","text":"<p>To use your references with external tools, you can generate bibliography files.</p> <ul> <li><code>BibLib: Build bibliography</code>: This command creates a CSL-JSON file (<code>bibliography.json</code>) and a Markdown list of citekeys (<code>citekeylist.md</code>).</li> <li><code>BibLib: Export bibliography as BibTeX</code>: This command creates a BibTeX file (<code>bibliography.bib</code>).</li> </ul> <p>The paths for these files can be configured in the settings.</p>"}]}